// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require('verifier');
const zokratesProof = require("../../zokrates/code/square/proof.json");

contract('verifier', _ => {

    describe('test verifier zokrates contract', function () {
        beforeEach(async function () {
            this.contract = await Verifier.new();
        })

        it('verification with correct proof', async function () {
            let result = await this.contract.verifyTx.call(
                zokratesProof.proof.A,
                zokratesProof.proof.A_p,
                zokratesProof.proof.B,
                zokratesProof.proof.B_p,
                zokratesProof.proof.C,
                zokratesProof.proof.C_p,
                zokratesProof.proof.H,
                zokratesProof.proof.K,
                zokratesProof.input
            );
            assert.equal(result, true, "Incorrect proof result")
        })

        it('verification with incorrect proof', async function () {
            let result = await this.contract.verifyTx.call(
                zokratesProof.proof.A,
                zokratesProof.proof.A_p,
                zokratesProof.proof.B,
                zokratesProof.proof.C,
                zokratesProof.proof.B_p,
                zokratesProof.proof.C_p,
                zokratesProof.proof.H,
                zokratesProof.proof.K,
                zokratesProof.input
            );
            assert.equal(result, false,  "Incorrect proof result");
        })
    });
})