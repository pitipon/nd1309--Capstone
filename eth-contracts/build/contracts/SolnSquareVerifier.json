{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "s",
          "type": "string"
        }
      ],
      "name": "Verified",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "addr",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"a\",\"type\":\"uint256[2]\"},{\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"name\":\"c\",\"type\":\"uint256[2]\"},{\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256[2]\"},{\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"name\":\"c\",\"type\":\"uint256[2]\"},{\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"s\",\"type\":\"string\"}],\"name\":\"Verified\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/mo/code/class/udacity-blockchain/Homework/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mo/code/class/udacity-blockchain/Homework/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x9aba62eee83e42708bbd2f4821547e4a425fcfaf41ffe07c617cbd95dbe24e80\",\"urls\":[\"bzzr://c8b2fdc99fd126283230511d435b9adeb765fbda4b832a54e1c4166728606e9b\"]},\"/Users/mo/code/class/udacity-blockchain/Homework/Blockchain-Capstone/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzzr://f48ebdff8df1cabbd7749c5eb818a6c54a6ba92956a850736bdcfbc9f53f9ffd\"]},\"/Users/mo/code/class/udacity-blockchain/Homework/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x83e3424e207af3c4d14a1923442190681ef0c1f3af0dcf1c5c52a9da318095b3\",\"urls\":[\"bzzr://49bbcbe2de2ad9f347198efeb4c45b00e9b4341d80727ad54d0e39a91b03965b\"]},\"/Users/mo/code/class/udacity-blockchain/Homework/Blockchain-Capstone/eth-contracts/contracts/verifier.sol\":{\"keccak256\":\"0x65bc375f5f8ac71a3cf2516ffb7ff91ac74456846731cdc9cd0f33b302b39e79\",\"urls\":[\"bzzr://b4045f78193d58d6578b00181f711f7960d4b43c379f5a1aff1c2a23df4093c2\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x982e18d2e3df98e3339f70f955a4d1fb78411a29963d0ea34621759eef67e86d\",\"urls\":[\"bzzr://a5438906da44343a09c6b47666d3649f269d9d156f2109e147e21595b2284363\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xeb8a266ef2da0aa60eea704031902ffd28b2d13dd0e8f5b69bcfb8415f2dad85\",\"urls\":[\"bzzr://393e9843d41c0652f115378cc58083c4acc4d83f7999fe22932d5e237c215d3f\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101ab576000357c0100000000000000000000000000000000000000000000000000000000900480634f6ccce7116100fb57806395d89b41116100b4578063c87b56dd1161008e578063c87b56dd14610d79578063d547cfb714610e20578063e985e9c514610ea3578063f2fde38b14610f1f576101ab565b806395d89b4114610ba1578063a22cb46514610c24578063b88d4fde14610c74576101ab565b80634f6ccce7146108cc578063621e9ec01461090e5780636352211e14610a8757806370a0823114610af55780638456cb5914610b4d5780638da5cb5b14610b57576101ab565b806327dc297e116101685780633eec14da116101425780633eec14da146106635780633f4ba83a146107ee57806340c10f19146107f857806342842e0e1461085e576101ab565b806327dc297e146103e05780632f745c59146104a557806338bbfa5014610507576101ab565b806301ffc9a7146101b057806306fdde0314610215578063081812fc14610298578063095ea7b31461030657806318160ddd1461035457806323b872dd14610372575b600080fd5b6101fb600480360360208110156101c657600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f63565b604051808215151515815260200191505060405180910390f35b61021d610fcb565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561025d578082015181840152602081019050610242565b50505050905090810190601f16801561028a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c4600480360360208110156102ae57600080fd5b810190808035906020019092919050505061106d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103526004803603604081101561031c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110aa565b005b61035c6112c3565b6040518082815260200191505060405180910390f35b6103de6004803603606081101561038857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112d0565b005b6104a3600480360360408110156103f657600080fd5b81019080803590602001909291908035906020019064010000000081111561041d57600080fd5b82018360208201111561042f57600080fd5b8035906020019184600183028401116401000000008311171561045157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112f5565b005b6104f1600480360360408110156104bb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611338565b6040518082815260200191505060405180910390f35b6106616004803603606081101561051d57600080fd5b81019080803590602001909291908035906020019064010000000081111561054457600080fd5b82018360208201111561055657600080fd5b8035906020019184600183028401116401000000008311171561057857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156105db57600080fd5b8201836020820111156105ed57600080fd5b8035906020019184600183028401116401000000008311171561060f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506113af565b005b6107ec600480360361018081101561067a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610759578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610705565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192905050506113b4565b005b6107f6611710565b005b6108446004803603604081101561080e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118ba565b604051808215151515815260200191505060405180910390f35b6108ca6004803603606081101561087457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061198b565b005b6108f8600480360360208110156108e257600080fd5b81019080803590602001909291905050506119ac565b6040518082815260200191505060405180910390f35b610a6d600480360361014081101561092557600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156109da578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610986565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192905050506119e4565b604051808215151515815260200191505060405180910390f35b610ab360048036036020811015610a9d57600080fd5b8101908080359060200190929190505050611c49565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b3760048036036020811015610b0b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c86565b6040518082815260200191505060405180910390f35b610b55611cd6565b005b610b5f611e82565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610ba9611eab565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610be9578082015181840152602081019050610bce565b50505050905090810190601f168015610c165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610c7260048036036040811015610c3a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611f4d565b005b610d7760048036036080811015610c8a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610cf157600080fd5b820183602082011115610d0357600080fd5b80359060200191846001830284011164010000000083111715610d2557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612089565b005b610da560048036036020811015610d8f57600080fd5b81019080803590602001909291905050506120b1565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610de5578082015181840152602081019050610dca565b50505050905090810190601f168015610e125780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610e2861217a565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610e68578082015181840152602081019050610e4d565b50505050905090810190601f168015610e955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610f0560048036036040811015610eb957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061221c565b604051808215151515815260200191505060405180910390f35b610f6160048036036020811015610f3557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506122b0565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110635780601f1061103857610100808354040283529160200191611063565b820191906000526020600020905b81548152906001019060200180831161104657829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6110b381611c49565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611139576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061464d602f913960400191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806111bb57506111ba6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff163361221c565b5b1515611212576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f81526020018061467c602f913960400191505060405180910390fd5b816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550803373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000600880549050905090565b6112da3382612363565b15156112e557600080fd5b6112f08383836123f8565b505050565b611334828260006040519080825280601f01601f19166020018201604052801561132e5781602001600182028038833980820191505090505b506113af565b5050565b600061134383611c86565b8210151561135057600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561139c57fe5b9060005260206000200154905092915050565b505050565b6000848484846040516020018085600260200280838360005b838110156113e85780820151818401526020810190506113cd565b505050509050018460026000925b8184101561143c5782846020020151600260200280838360005b8381101561142b578082015181840152602081019050611410565b5050505090500192600101926113f6565b9250505083600260200280838360005b8381101561146757808201518184015260208101905061144c565b5050505090500182600260200280838360005b8381101561149557808201518184015260208101905061147a565b505050509050019450505050506040516020818303038152906040528051906020012090506014600082815260200190815260200160002060009054906101000a900460ff16151515611533576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806145e86021913960400191505060405180910390fd5b6000611541868686866119e4565b90508015156115b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f5468652070726f6f66206973206e6f742076616c69640000000000000000000081525060200191505060405180910390fd5b6115c0614377565b6060604051908101604052808481526020018981526020018a73ffffffffffffffffffffffffffffffffffffffff16815250905080601360008a8152602001908152602001600020600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060016014600085815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd54d9ef5d3801dc9b4c79ac9cb0d5ed3b9c83d168bd86bb6e937ca7df70392da838a8a604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156117b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806146ab6021913960400191505060405180910390fd5b600060149054906101000a900460ff16151561183b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f436f6e7472616374206973206e6f74207061757365640000000000000000000081525060200191505060405180910390fd5b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008073ffffffffffffffffffffffffffffffffffffffff166013600084815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515611979576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806145e86021913960400191505060405180910390fd5b611983838361241c565b905092915050565b6119a78383836020604051908101604052806000815250612089565b505050565b60006119b66112c3565b821015156119c357600080fd5b6008828154811015156119d257fe5b90600052602060002001549050919050565b60006119ee6143b2565b6040805190810160405280876000600281101515611a0857fe5b60200201518152602001876001600281101515611a2157fe5b6020020151815250816000018190525060408051908101604052806040805190810160405280886000600281101515611a5657fe5b60200201516000600281101515611a6957fe5b60200201518152602001886000600281101515611a8257fe5b60200201516001600281101515611a9557fe5b602002015181525081526020016040805190810160405280886001600281101515611abc57fe5b60200201516000600281101515611acf57fe5b60200201518152602001886001600281101515611ae857fe5b60200201516001600281101515611afb57fe5b602002015181525081525081602001819052506040805190810160405280856000600281101515611b2857fe5b60200201518152602001856001600281101515611b4157fe5b6020020151815250816040018190525060606002604051908082528060200260200182016040528015611b835781602001602082028038833980820191505090505b50905060008090505b6002811015611bd1578481600281101515611ba357fe5b60200201518282815181101515611bb657fe5b90602001906020020181815250508080600101915050611b8c565b506000611bde82846124e2565b1415611c3a577f3f3cfdb26fb5f9f1786ab4f1a1f9cd4c0b5e726cbdfc26e495261731aad44e396040518080602001828103825260228152602001806146096022913960400191505060405180910390a1600192505050611c41565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611ccf600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061266a565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611d7d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806146ab6021913960400191505060405180910390fd5b600060149054906101000a900460ff16151515611e02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f436f6e747261637420697320706175736564000000000000000000000000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f435780601f10611f1857610100808354040283529160200191611f43565b820191906000526020600020905b815481529060010190602001808311611f2657829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611f8857600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6120948484846112d0565b6120a084848484612678565b15156120ab57600080fd5b50505050565b60606120bc8261289b565b15156120c757600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561216e5780601f106121435761010080835404028352916020019161216e565b820191906000526020600020905b81548152906001019060200180831161215157829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156122125780601f106121e757610100808354040283529160200191612212565b820191906000526020600020905b8154815290600101906020018083116121f557829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612357576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806146ab6021913960400191505060405180910390fd5b6123608161290d565b50565b60008061236f83611c49565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806123de57508373ffffffffffffffffffffffffffffffffffffffff166123c68461106d565b73ffffffffffffffffffffffffffffffffffffffff16145b806123ef57506123ee818561221c565b5b91505092915050565b612403838383612a59565b61240d8382612d47565b6124178282612eeb565b505050565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156124c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806146ab6021913960400191505060405180910390fd5b6124cf8383612fb2565b6124d882612fd3565b6001905092915050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506125106143e7565b612518613126565b9050806080015151600186510114151561253157600080fd5b612539614430565b6040805190810160405280600081526020016000815250905060008090505b86518110156125dd5783878281518110151561257057fe5b9060200190602002015110151561258657600080fd5b6125ce826125c98560800151600185018151811015156125a257fe5b906020019060200201518a858151811015156125ba57fe5b90602001906020020151613580565b61361c565b91508080600101915050612558565b5061260481836080015160008151811015156125f557fe5b9060200190602002015161361c565b905061264a8560000151866020015161261c846136d9565b856040015161262e8a604001516136d9565b876060015161264089600001516136d9565b8960200151613775565b151561265c5760019350505050612664565b600093505050505b92915050565b600081600001549050919050565b60006126998473ffffffffffffffffffffffffffffffffffffffff166138f9565b15156126a85760019050612893565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561279f578082015181840152602081019050612784565b50505050905090810190601f1680156127cc5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156127ee57600080fd5b505af1158015612802573d6000803e3d6000fd5b505050506040513d602081101561281857600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612995576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806146cc6024913960400191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8273ffffffffffffffffffffffffffffffffffffffff16612a7982611c49565b73ffffffffffffffffffffffffffffffffffffffff16141515612b04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f596f7520617265206e6f7420746865206f776e6572000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015612b5d5750612b5b8273ffffffffffffffffffffffffffffffffffffffff166138f9565b155b1515612bb4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061462b6022913960400191505060405180910390fd5b60006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612ca0600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061390c565b612ce7600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061392f565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612d9f6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061394590919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515612e92576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612e1057fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515612e6a57fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003612ee4919061444a565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b612fbc8282613967565b612fc68282612eeb565b612fcf81613add565b5050565b612fdc8161289b565b1515613050576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6b656e20646f6573206e6f7420657869737400000000000000000000000081525060200191505060405180910390fd5b6130fc60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156130e95780601f106130be576101008083540402835291602001916130e9565b820191906000526020600020905b8154815290600101906020018083116130cc57829003601f168201915b50505050506130f783613b29565b613c82565b601260008381526020019081526020016000209080519060200190613122929190614476565b5050565b61312e6143e7565b60408051908101604052807f28150d30c8e7b9f0872971b5415b364ed85a2877b7dcb29ef9581be5f98e440281526020017f0d4f31bd62e855d72d9545542504438ad70d64e9c648851490ca20539a3a22dc8152508160000181905250604080519081016040528060408051908101604052807f222004f08df0f1bc45dbe44877ab642069f76c634cd3932ac6c917fd2dac199981526020017f1aa247f80448ce3891642b15387e267f081087356a57e2c072a3d5d1b0deb2e6815250815260200160408051908101604052807f0153e379c5b22d6fb3bcf569402bef2a60972bfc10a42b0643935996ed4a4f8d81526020017f2331c07946bc890d23b1a6980e1e6389cc016afe749de3ddc00fa6d2065bb2a58152508152508160200181905250604080519081016040528060408051908101604052807f2d2238e8c3cd96658c34ba252de8646af98ce707909dc562fd631aa98ffd611c81526020017f27d97c89583fe91653ba4a8121017651974ba292fb6c2c0196761a9a72056385815250815260200160408051908101604052807f13eb2ecfd75188538cc801054101ae89cbd5ef350ace1dbd701497eaf29d101c81526020017f26eec2f49b37a9537b7f4323338ac05c695f06a729ea1853c012f5ac1bcb97df8152508152508160400181905250604080519081016040528060408051908101604052807f0418e9af25d106d0e383dbbf784be6519b529a69d06abb6d849994396301a77681526020017f11cb809447335c9cc527af6b3e612fbfded421f3bc3b59bbaaf9513d229ea790815250815260200160408051908101604052807f2985819234d4d54b4e59cffb8a7212e94b272be16e7c09badff527336419108081526020017f1fda3912e8ce0be202dc9aa52b5b7db13ee90db3b6134bab201d735e3586bd2d8152508152508160600181905250600360405190808252806020026020018201604052801561341557816020015b6134026144f6565b8152602001906001900390816133fa5790505b50816080018190525060408051908101604052807f0d3b0a4e73b3148bc030079ce0fbe6b73d62afcf54c1f63a53e088b1a5b07b7b81526020017f0dbf861c5ca8bb6df920cbdf84d1f61c63e2b5b54912b343d478dfb9d170fc2d8152508160800151600081518110151561348657fe5b9060200190602002018190525060408051908101604052807f2e6174dd59dbaab9ed2b0df03e37b2f9307374c114ddda17235350f656b4bb9a81526020017f0beb0c2d8a4a1d039f84c3f0fd94a317c1042ac979c08675bf12de5c66d0b185815250816080015160018151811015156134fb57fe5b9060200190602002018190525060408051908101604052807f27cffe2b2ed59aeecd98d567feaf23508b10ce1117d0d2ac2aef5e6ad7c867f381526020017f2ae1998b1b1574b3ed7837bc3f68aca9148c1a99be7a925d3bdf784e8113f7a68152508160800151600281518110151561357057fe5b9060200190602002018190525090565b613588614430565b613590614510565b83600001518160006003811015156135a457fe5b60200201818152505083602001518160016003811015156135c157fe5b602002018181525050828160026003811015156135da57fe5b6020020181815250506000606083608084600060076107d05a03f19050806000811461360557613607565bfe5b5080151561361457600080fd5b505092915050565b613624614430565b61362c614533565b836000015181600060048110151561364057fe5b602002018181525050836020015181600160048110151561365d57fe5b602002018181525050826000015181600260048110151561367a57fe5b602002018181525050826020015181600360048110151561369757fe5b602002018181525050600060608360c084600060066107d05a03f1905080600081146136c2576136c4565bfe5b508015156136d157600080fd5b505092915050565b6136e1614430565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790506000836000015114801561371e575060008360200151145b15613742576040805190810160405280600081526020016000815250915050613770565b60408051908101604052808460000151815260200182856020015181151561376657fe5b0683038152509150505b919050565b6000606060046040519080825280602002602001820160405280156137b457816020015b6137a16144f6565b8152602001906001900390816137995790505b509050606060046040519080825280602002602001820160405280156137f457816020015b6137e1614556565b8152602001906001900390816137d95790505b5090508a82600081518110151561380757fe5b906020019060200201819052508882600181518110151561382457fe5b906020019060200201819052508682600281518110151561384157fe5b906020019060200201819052508482600381518110151561385e57fe5b906020019060200201819052508981600081518110151561387b57fe5b906020019060200201819052508781600181518110151561389857fe5b90602001906020020181905250858160028151811015156138b557fe5b90602001906020020181905250838160038151811015156138d257fe5b906020019060200201819052506138e98282613cc9565b9250505098975050505050505050565b600080823b905060008111915050919050565b6139246001826000015461394590919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600082821115151561395657600080fd5b600082840390508091505092915050565b6139708161289b565b1515156139e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f746f6b656e496420616c7265616479206578697374730000000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613a7e600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061392f565b808273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415613b71576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050613c7d565b600082905060005b600082141515613b9f578080600101915050600a82811515613b9757fe5b049150613b79565b6060816040519080825280601f01601f191660200182016040528015613bd45781602001600182028038833980820191505090505b50905060006001830390505b600086141515613c7557600a86811515613bf657fe5b066030017f010000000000000000000000000000000000000000000000000000000000000002828280600190039350815181101515613c3157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86811515613c6d57fe5b049550613be0565b819450505050505b919050565b6060613cc18383602060405190810160405280600081525060206040519081016040528060008152506020604051908101604052806000815250613f5c565b905092915050565b600081518351141515613cdb57600080fd5b6000835190506000600682029050606081604051908082528060200260200182016040528015613d1a5781602001602082028038833980820191505090505b50905060008090505b83811015613ef8578681815181101515613d3957fe5b90602001906020020151600001518260006006840201815181101515613d5b57fe5b90602001906020020181815250508681815181101515613d7757fe5b90602001906020020151602001518260016006840201815181101515613d9957fe5b90602001906020020181815250508581815181101515613db557fe5b90602001906020020151600001516000600281101515613dd157fe5b60200201518260026006840201815181101515613dea57fe5b90602001906020020181815250508581815181101515613e0657fe5b90602001906020020151600001516001600281101515613e2257fe5b60200201518260036006840201815181101515613e3b57fe5b90602001906020020181815250508581815181101515613e5757fe5b90602001906020020151602001516000600281101515613e7357fe5b60200201518260046006840201815181101515613e8c57fe5b90602001906020020181815250508581815181101515613ea857fe5b90602001906020020151602001516001600281101515613ec457fe5b60200201518260056006840201815181101515613edd57fe5b90602001906020020181815250508080600101915050613d23565b50613f0161457d565b60006020826020860260208601600060086107d05a03f190508060008114613f2857613f2a565bfe5b50801515613f3757600080fd5b6000826000600181101515613f4857fe5b602002015114159550505050505092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613fb85781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015614082578881815181101515613fe657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561404557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613fcf565b600090505b875181101561413a57878181518110151561409e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156140fd57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050614087565b600090505b86518110156141f257868181518110151561415657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156141b557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061413f565b600090505b85518110156142aa57858181518110151561420e57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561426d57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506141f7565b600090505b84518110156143625784818151811015156142c657fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561432557fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506142af565b82995050505050505050505095945050505050565b6060604051908101604052806000801916815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b610100604051908101604052806143c76144f6565b81526020016143d4614556565b81526020016143e16144f6565b81525090565b6101e0604051908101604052806143fc6144f6565b8152602001614409614556565b8152602001614416614556565b8152602001614423614556565b8152602001606081525090565b604080519081016040528060008152602001600081525090565b8154818355818111156144715781836000526020600020918201910161447091906145a0565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106144b757805160ff19168380011785556144e5565b828001600101855582156144e5579182015b828111156144e45782518255916020019190600101906144c9565b5b5090506144f291906145a0565b5090565b604080519081016040528060008152602001600081525090565b606060405190810160405280600390602082028038833980820191505090505090565b608060405190810160405280600490602082028038833980820191505090505090565b60806040519081016040528061456a6145c5565b81526020016145776145c5565b81525090565b602060405190810160405280600190602082028038833980820191505090505090565b6145c291905b808211156145be5760008160009055506001016145a6565b5090565b90565b604080519081016040528060029060208202803883398082019150509050509056fe54686520736f6c7574696f6e20686173206265656e2075736564206265666f72655472616e73616374696f6e207375636365737366756c6c792076657269666965642e27746f2720706172616d206973206e6f7420612076616c696420616464726573732e6164647265737320697320616c7265616479206f776e6572206f66207468697320737065636966696320746f6b656e4163636573732064656e6965642c206e6f7420616c6c6f77656420746f2063616c6c207468697320617070726f76654f6e6c7920746865206f776e65722063616e206d616b6520746869732063616c6c6e6577206f776e657220616464726573732073686f756c64206265206578697374696e67a165627a7a723058207b98c55e5620cdd842d9dfc8df024c6d747de9a0a8f2c54873ec20206b1c4ad40029",
  "sourceMap": "290:1762:2:-;;;20014:277:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;764:10;755:6;;:19;;;;;;;;;;;;;;;;;;822:6;;;;;;;;;;;789:40;;818:1;789:40;;;;;;;;;;;;2337:5;2327:7;;:15;;;;;;;;;;;;;;;;;;3271:40;2868:10;3290:20;;3271:18;;;:40;;;:::i;:::-;5417;5291:10;5436:20;;5417:18;;;:40;;;:::i;:::-;12731:51;12337:10;12750:31;;12731:18;;;:51;;;:::i;:::-;20157:4;20149:5;:12;;;;;;;;;;;;:::i;:::-;;20181:6;20171:7;:16;;;;;;;;;;;;:::i;:::-;;20213:12;20197:13;:28;;;;;;;;;;;;:::i;:::-;;20235:49;19825:10;20254:29;;20235:18;;;:49;;;:::i;:::-;20014:277;;;290:1762:2;;3621:158:0;3711:10;3696:25;;:11;:25;;;;;3688:34;;;;;;;;3768:4;3732:20;:33;3753:11;3732:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3621:158;:::o;290:1762:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "290:1762:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;290:1762:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3409:133:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3409:133:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20372:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20372:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6518:162;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6518:162:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5882:630;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5882:630:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13496:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7657:180;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7657:180:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:122:1;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:122:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:122:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:122:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:122:1;;;;;;;;;;;;;;;:::i;:::-;;13162:182:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13162:182:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14929:166:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14929:166:1;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:1;;;;;;;;;;;;;;;:::i;:::-;;921:664:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;921:664:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;921:664:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;921:664:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;921:664:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;921:664:2;;;;;;;;;;;;;;:::i;:::-;;2097:110:0;;;:::i;:::-;;1807:243:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1807:243:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7843:132:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7843:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13927:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13927:148:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;23986:732:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;23986:732:3;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23986:732:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23986:732:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23986:732:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23986:732:3;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5651:157:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5651:157:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5470:175;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5470:175:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1983:108;;;:::i;:::-;;507:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;20459:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20459:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6972:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6972:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7981:211;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7981:211:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7981:211:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7981:211:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7981:211:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7981:211:0;;;;;;;;;;;;;;;:::i;:::-;;20653:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20653:151:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20653:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20550:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20550:97:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7506:145;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7506:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1395:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1395:107:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;3409:133;3479:4;3502:20;:33;3523:11;3502:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3495:40;;3409:133;;;:::o;20372:81::-;20409:13;20441:5;20434:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20372:81;:::o;6518:162::-;6577:7;6649:15;:24;6665:7;6649:24;;;;;;;;;;;;;;;;;;;;;6642:31;;6518:162;;;:::o;5882:630::-;6040:16;6048:7;6040;:16::i;:::-;6034:22;;:2;:22;;;;6026:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6240:6;;;;;;;;;;;6226:20;;:10;:20;;;:60;;;;6250:36;6267:6;;;;;;;;;;;6275:10;6250:16;:36::i;:::-;6226:60;6218:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6423:2;6396:15;:24;6412:7;6396:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6497:7;6485:10;6472:33;;6481:2;6472:33;;;;;;;;;;;;5882:630;;:::o;13496:94::-;13540:7;13566:10;:17;;;;13559:24;;13496:94;:::o;7657:180::-;7747:39;7766:10;7778:7;7747:18;:39::i;:::-;7739:48;;;;;;;;7798:32;7812:4;7818:2;7822:7;7798:13;:32::i;:::-;7657:180;;;:::o;14801:122:1:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:1;;;;14876:10;:40::i;:::-;14801:122;;:::o;13162:182:0:-;13242:7;13277:16;13287:5;13277:9;:16::i;:::-;13269:5;:24;13261:33;;;;;;;;13311:12;:19;13324:5;13311:19;;;;;;;;;;;;;;;13331:5;13311:26;;;;;;;;;;;;;;;;;;13304:33;;13162:182;;;;:::o;14929:166:1:-;;;;:::o;921:664:2:-;1126:11;1180:1;1183;1186;1189:5;1163:32;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1163:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1163:32:2;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1163:32:2;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1163:32:2;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1163:32:2;;;1140:65;;;;;;1126:79;;1224:18;:23;1243:3;1224:23;;;;;;;;;;;;;;;;;;;;;1223:24;1215:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1295:12;1310:24;1319:1;1322;1325;1328:5;1310:8;:24::i;:::-;1295:39;;1352:7;1344:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:24;;:::i;:::-;1423:28;;;;;;;;;1432:3;1423:28;;;;1437:7;1423:28;;;;1446:4;1423:28;;;;;1396:55;;1482:8;1461:9;:18;1471:7;1461:18;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1526:4;1500:18;:23;1519:3;1500:23;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1545:33;1559:3;1564:4;1570:7;1545:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;921:664;;;;;;;;;:::o;2097:110:0:-;996:10;986:20;;:6;;;;;;;;;;;:20;;;978:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2579:7;;;;;;;;;;;2571:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2160:5;2150:7;;:15;;;;;;;;;;;;;;;;;;2180:20;2189:10;2180:20;;;;;;;;;;;;;;;;;;;;;;2097:110::o;1807:243:2:-;1868:4;1940:1;1905:37;;:9;:18;1915:7;1905:18;;;;;;;;;;;:23;;;;;;;;;;;;:37;;;;1884:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2018:25;2029:4;2035:7;2018:10;:25::i;:::-;2011:32;;1807:243;;;;:::o;7843:132:0:-;7929:39;7946:4;7952:2;7956:7;7929:39;;;;;;;;;;;;;:16;:39::i;:::-;7843:132;;;:::o;13927:148::-;13985:7;14020:13;:11;:13::i;:::-;14012:5;:21;14004:30;;;;;;;;14051:10;14062:5;14051:17;;;;;;;;;;;;;;;;;;14044:24;;13927:148;;;:::o;23986:732:3:-;24157:6;24175:18;;:::i;:::-;24213:27;;;;;;;;;24229:1;24231;24229:4;;;;;;;;;;;;;24213:27;;;;24235:1;24237;24235:4;;;;;;;;;;;;;24213:27;;;24203:5;:7;;:37;;;;24260:55;;;;;;;;;;;;;;;;;;24277:1;24279;24277:4;;;;;;;;;;;;;24282:1;24277:7;;;;;;;;;;;;;24260:55;;;;24286:1;24288;24286:4;;;;;;;;;;;;;24291:1;24286:7;;;;;;;;;;;;;24260:55;;;;;;;;;;;;;;;;24297:1;24299;24297:4;;;;;;;;;;;;;24302:1;24297:7;;;;;;;;;;;;;24260:55;;;;24306:1;24308;24306:4;;;;;;;;;;;;;24311:1;24306:7;;;;;;;;;;;;;24260:55;;;;;;24250:5;:7;;:65;;;;24335:27;;;;;;;;;24351:1;24353;24351:4;;;;;;;;;;;;;24335:27;;;;24357:1;24359;24357:4;;;;;;;;;;;;;24335:27;;;24325:5;:7;;:37;;;;24372:25;24411:12;24400:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;24400:24:3;;;;24372:52;;24438:6;24447:1;24438:10;;24434:88;24454:12;24450:1;:16;24434:88;;;24503:5;24509:1;24503:8;;;;;;;;;;;;;24486:11;24498:1;24486:14;;;;;;;;;;;;;;;;;:25;;;;;24468:3;;;;;;;24434:88;;;;24565:1;24535:26;24542:11;24555:5;24535:6;:26::i;:::-;:31;24531:181;;;24587:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24654:4;24647:11;;;;;;24531:181;24696:5;24689:12;;;;23986:732;;;;;;;:::o;5651:157:0:-;5706:7;5781:11;:20;5793:7;5781:20;;;;;;;;;;;;;;;;;;;;;5774:27;;5651:157;;;:::o;5470:175::-;5525:7;5604:34;:17;:24;5622:5;5604:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5597:41;;5470:175;;;:::o;1983:108::-;996:10;986:20;;:6;;;;;;;;;;;:20;;;978:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2489:7;;;;;;;;;;;2488:8;2480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2047:4;2037:7;;:14;;;;;;;;;;;;;;;;;;2066:18;2073:10;2066:18;;;;;;;;;;;;;;;;;;;;;;1983:108::o;507:77::-;545:7;571:6;;;;;;;;;;;564:13;;507:77;:::o;20459:85::-;20498:13;20530:7;20523:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20459:85;:::o;6972:213::-;7057:10;7051:16;;:2;:16;;;;7043:25;;;;;;;;7115:8;7078:18;:30;7097:10;7078:30;;;;;;;;;;;;;;;:34;7109:2;7078:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7165:2;7138:40;;7153:10;7138:40;;;7169:8;7138:40;;;;;;;;;;;;;;;;;;;;;;6972:213;;:::o;7981:211::-;8087:31;8100:4;8106:2;8110:7;8087:12;:31::i;:::-;8136:48;8159:4;8165:2;8169:7;8178:5;8136:22;:48::i;:::-;8128:57;;;;;;;;7981:211;;;;:::o;20653:151::-;20711:13;20744:16;20752:7;20744;:16::i;:::-;20736:25;;;;;;;;20778:10;:19;20789:7;20778:19;;;;;;;;;;;20771:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20653:151;;;:::o;20550:97::-;20595:13;20627;20620:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20550:97;:::o;7506:145::-;7586:4;7609:18;:25;7628:5;7609:25;;;;;;;;;;;;;;;:35;7635:8;7609:35;;;;;;;;;;;;;;;;;;;;;;;;;7602:42;;7506:145;;;;:::o;1395:107::-;996:10;986:20;;:6;;;;;;;;;;;:20;;;978:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1467:28;1486:8;1467:18;:28::i;:::-;1395:107;:::o;8898:246::-;8983:4;8999:13;9015:16;9023:7;9015;:16::i;:::-;8999:32;;9060:5;9049:16;;:7;:16;;;:51;;;;9093:7;9069:31;;:20;9081:7;9069:11;:20::i;:::-;:31;;;9049:51;:87;;;;9104:32;9121:5;9128:7;9104:16;:32::i;:::-;9049:87;9041:96;;;8898:246;;;;:::o;14450:239::-;14535:38;14555:4;14561:2;14565:7;14535:19;:38::i;:::-;14584:47;14617:4;14623:7;14584:32;:47::i;:::-;14642:40;14670:2;14674:7;14642:27;:40::i;:::-;14450:239;;;:::o;22215:161::-;22283:4;996:10;986:20;;:6;;;;;;;;;;;:20;;;978:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22299:18;22305:2;22309:7;22299:5;:18::i;:::-;22327:21;22340:7;22327:12;:21::i;:::-;22365:4;22358:11;;22215:161;;;;:::o;23042:909:3:-;23117:4;23133:26;23162:77;23133:106;;23249:22;;:::i;:::-;23274:14;:12;:14::i;:::-;23249:39;;23326:2;:12;;;:19;23321:1;23306:5;:12;:16;:39;23298:48;;;;;;;;23403:27;;:::i;:::-;23433:21;;;;;;;;;23449:1;23433:21;;;;23452:1;23433:21;;;23403:51;;23469:6;23478:1;23469:10;;23464:197;23485:5;:12;23481:1;:16;23464:197;;;23537:18;23526:5;23532:1;23526:8;;;;;;;;;;;;;;;;;;:29;23518:38;;;;;;;;23577:73;23594:4;23600:49;23619:2;:12;;;23636:1;23632;:5;23619:19;;;;;;;;;;;;;;;;;;23640:5;23646:1;23640:8;;;;;;;;;;;;;;;;;;23600:18;:49::i;:::-;23577:16;:73::i;:::-;23570:80;;23499:3;;;;;;;23464:197;;;;23677:39;23694:4;23700:2;:12;;;23713:1;23700:15;;;;;;;;;;;;;;;;;;23677:16;:39::i;:::-;23670:46;;23730:186;23765:5;:7;;;23774:5;:7;;;23796:20;23811:4;23796:14;:20::i;:::-;23818:2;:8;;;23841:23;23856:5;:7;;;23841:14;:23::i;:::-;23866:2;:8;;;23889:20;23904:2;:4;;;23889:14;:20::i;:::-;23911:2;:4;;;23730:20;:186::i;:::-;23729:187;23726:200;;;23925:1;23918:8;;;;;;;23726:200;23943:1;23936:8;;;;;23042:909;;;;;:::o;1062:112:4:-;1127:7;1153;:14;;;1146:21;;1062:112;;;:::o;11182:347:0:-;11303:4;11328:15;:2;:13;;;:15::i;:::-;11327:16;11323:58;;;11366:4;11359:11;;;;11323:58;11391:13;11423:2;11407:36;;;11444:10;11456:4;11462:7;11471:5;11407:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11407:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11407:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11407:70:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11407:70:0;;;;;;;;;;;;;;;;11391:86;;4424:10;11505:16;;11495:26;;;:6;:26;;;;11487:35;;;11182:347;;;;;;;:::o;8386:152::-;8443:4;8459:13;8475:11;:20;8487:7;8475:20;;;;;;;;;;;;;;;;;;;;;8459:36;;8529:1;8512:19;;:5;:19;;;;8505:26;;;8386:152;;;:::o;1119:270::-;1212:1;1192:22;;:8;:22;;;;1184:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1265:21;1289:6;;;;;;;;;;;1265:30;;1314:8;1305:6;;:17;;;;;;;;;;;;;;;;;;1373:8;1337:45;;1358:13;1337:45;;;;;;;;;;;;1119:270;;:::o;9935:719::-;10113:4;10093:24;;:16;10101:7;10093;:16::i;:::-;:24;;;10085:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10238:1;10224:16;;:2;:16;;;;:36;;;;;10245:15;:2;:13;;;:15::i;:::-;10244:16;10224:36;10216:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10379:1;10344:15;:24;10360:7;10344:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;10484:2;10461:11;:20;10473:7;10461:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10496:35;:17;:23;10514:4;10496:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10541:33;:17;:21;10559:2;10541:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10639:7;10635:2;10620:27;;10629:4;10620:27;;;;;;;;;;;;9935:719;;;:::o;16916:1128::-;17178:22;17203:32;17233:1;17203:12;:18;17216:4;17203:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17178:57;;17245:18;17266:17;:26;17284:7;17266:26;;;;;;;;;;;;17245:47;;17410:14;17396:10;:28;;17392:323;;;17440:19;17462:12;:18;17475:4;17462:18;;;;;;;;;;;;;;;17481:14;17462:34;;;;;;;;;;;;;;;;;;17440:56;;17544:11;17511:12;:18;17524:4;17511:18;;;;;;;;;;;;;;;17530:10;17511:30;;;;;;;;;;;;;;;;;:44;;;;17660:10;17627:17;:30;17645:11;17627:30;;;;;;;;;;;:43;;;;17392:323;;17801:12;:18;17814:4;17801:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;16916:1128;;;;:::o;15762:183::-;15875:12;:16;15888:2;15875:16;;;;;;;;;;;;;;;:23;;;;15846:17;:26;15864:7;15846:26;;;;;;;;;;;:52;;;;15908:12;:16;15921:2;15908:16;;;;;;;;;;;;;;;15930:7;15908:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;15908:30:0;;;;;;;;;;;;;;;;;;;;;;15762:183;;:::o;14944:196::-;15007:24;15019:2;15023:7;15007:11;:24::i;:::-;15042:40;15070:2;15074:7;15042:27;:40::i;:::-;15093;15125:7;15093:31;:40::i;:::-;14944:196;;:::o;21275:189::-;21341:16;21349:7;21341;:16::i;:::-;21333:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21414:43;21424:13;21414:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21439:17;21448:7;21439:8;:17::i;:::-;21414:9;:43::i;:::-;21392:10;:19;21403:7;21392:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;21275:189;:::o;21093:1944:3:-;21140:22;;:::i;:::-;21181:169;;;;;;;;;21205:66;21181:169;;;;21282:66;21181:169;;;21174:2;:4;;:176;;;;21367:327;;;;;;;;;;;;;;;;;;21392:66;21367:327;;;;21469:66;21367:327;;;;;;;;;;;;;;;;21548:66;21367:327;;;;21625:66;21367:327;;;;;;21360:2;:4;;:334;;;;21715:327;;;;;;;;;;;;;;;;;;21740:66;21715:327;;;;21817:66;21715:327;;;;;;;;;;;;;;;;21896:66;21715:327;;;;21973:66;21715:327;;;;;;21704:2;:8;;:338;;;;22063:327;;;;;;;;;;;;;;;;;;22088:66;22063:327;;;;22165:66;22063:327;;;;;;;;;;;;;;;;22244:66;22063:327;;;;22321:66;22063:327;;;;;;22052:2;:8;;:338;;;;22437:1;22415:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;22400:2;:12;;:39;;;;22467:169;;;;;;;;;22491:66;22467:169;;;;22568:66;22467:169;;;22449:2;:12;;;22462:1;22449:15;;;;;;;;;;;;;;;;;:187;;;;22664:169;;;;;;;;;22688:66;22664:169;;;;22765:66;22664:169;;;22646:2;:12;;;22659:1;22646:15;;;;;;;;;;;;;;;;;:187;;;;22861:169;;;;;;;;;22885:66;22861:169;;;;22962:66;22861:169;;;22843:2;:12;;;22856:1;22843:15;;;;;;;;;;;;;;;;;:187;;;;21093:1944;:::o;17636:444::-;17700:16;;:::i;:::-;17728:20;;:::i;:::-;17769:1;:3;;;17758:5;17764:1;17758:8;;;;;;;;;;;;:14;;;;;17793:1;:3;;;17782:5;17788:1;17782:8;;;;;;;;;;;;:14;;;;;17817:1;17806:5;17812:1;17806:8;;;;;;;;;;;;:12;;;;;17828;17927:4;17924:1;17918:4;17911:5;17908:1;17905;17898:4;17893:3;17889:14;17884:48;17873:59;;18009:7;18022:1;18017:20;;;;18002:35;;18017:20;18026:9;18002:35;;18065:7;18056:17;;;;;;;;17636:444;;;;;;:::o;16724:483::-;16798:16;;:::i;:::-;16826:20;;:::i;:::-;16867:2;:4;;;16856:5;16862:1;16856:8;;;;;;;;;;;;:15;;;;;16892:2;:4;;;16881:5;16887:1;16881:8;;;;;;;;;;;;:15;;;;;16917:2;:4;;;16906:5;16912:1;16906:8;;;;;;;;;;;;:15;;;;;16942:2;:4;;;16931:5;16937:1;16931:8;;;;;;;;;;;;:15;;;;;16956:12;17055:4;17052:1;17046:4;17039:5;17036:1;17033;17026:4;17021:3;17017:14;17012:48;17001:59;;17137:7;17150:1;17145:20;;;;17130:35;;17145:20;17154:9;17130:35;;17192:7;17184:16;;;;;;;;16724:483;;;;;;:::o;16335:340::-;16392:14;;:::i;:::-;16470:6;16479:77;16470:86;;16577:1;16570;:3;;;:8;:20;;;;;16589:1;16582;:3;;;:8;16570:20;16566:58;;;16611:13;;;;;;;;;16619:1;16611:13;;;;16622:1;16611:13;;;16604:20;;;;;16566:58;16641:27;;;;;;;;;16649:1;:3;;;16641:27;;;;16665:1;16659;:3;;;:7;;;;;;;;16654:1;:13;16641:27;;;16634:34;;;16335:340;;;;:::o;20202:547::-;20448:4;20464:19;20500:1;20486:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20464:38;;20512:19;20548:1;20534:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20512:38;;20568:2;20560;20563:1;20560:5;;;;;;;;;;;;;;;;;:10;;;;20588:2;20580;20583:1;20580:5;;;;;;;;;;;;;;;;;:10;;;;20608:2;20600;20603:1;20600:5;;;;;;;;;;;;;;;;;:10;;;;20628:2;20620;20623:1;20620:5;;;;;;;;;;;;;;;;;:10;;;;20648:2;20640;20643:1;20640:5;;;;;;;;;;;;;;;;;:10;;;;20668:2;20660;20663:1;20660:5;;;;;;;;;;;;;;;;;:10;;;;20688:2;20680;20683:1;20680:5;;;;;;;;;;;;;;;;;:10;;;;20708:2;20700;20703:1;20700:5;;;;;;;;;;;;;;;;;:10;;;;20727:15;20735:2;20739;20727:7;:15::i;:::-;20720:22;;;;20202:547;;;;;;;;;;:::o;463:616:7:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;1275:108:4:-;1355:21;1374:1;1355:7;:14;;;:18;;:21;;;;:::i;:::-;1338:7;:14;;:38;;;;1275:108;:::o;1180:89::-;1261:1;1243:7;:14;;;:19;;;;;;;;;;;1180:89;:::o;1211:145:5:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;9301:435:0:-;9452:16;9460:7;9452;:16::i;:::-;9451:17;9443:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9604:2;9581:11;:20;9593:7;9581:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9616:33;:17;:21;9634:2;9616:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9721:7;9717:2;9696:33;;9705:10;9696:33;;;;;;;;;;;;9301:435;;:::o;16140:161::-;16243:10;:17;;;;16216:15;:24;16232:7;16216:24;;;;;;;;;;;:44;;;;16270:10;16286:7;16270:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16270:24:0;;;;;;;;;;;;;;;;;;;;;;16140:161;:::o;43271:465:1:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;;43456:66;;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:1;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;;43601:100;;;43664:2;43659;:7;;;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;18291:913:3:-;18368:4;18405:2;:9;18392:2;:9;:22;18384:31;;;;;;;;18425:13;18441:2;:9;18425:25;;18460:14;18488:1;18477:8;:12;18460:29;;18499:19;18532:9;18521:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;18521:21:3;;;;18499:43;;18557:6;18566:1;18557:10;;18552:307;18573:8;18569:1;:12;18552:307;;;18629:2;18632:1;18629:5;;;;;;;;;;;;;;;;;;:7;;;18610:5;18624:1;18620;18616;:5;:9;18610:16;;;;;;;;;;;;;;;;;:26;;;;;18669:2;18672:1;18669:5;;;;;;;;;;;;;;;;;;:7;;;18650:5;18664:1;18660;18656;:5;:9;18650:16;;;;;;;;;;;;;;;;;:26;;;;;18709:2;18712:1;18709:5;;;;;;;;;;;;;;;;;;:7;;;18717:1;18709:10;;;;;;;;;;;;;18690:5;18704:1;18700;18696;:5;:9;18690:16;;;;;;;;;;;;;;;;;:29;;;;;18752:2;18755:1;18752:5;;;;;;;;;;;;;;;;;;:7;;;18760:1;18752:10;;;;;;;;;;;;;18733:5;18747:1;18743;18739;:5;:9;18733:16;;;;;;;;;;;;;;;;;:29;;;;;18795:2;18798:1;18795:5;;;;;;;;;;;;;;;;;;:7;;;18803:1;18795:10;;;;;;;;;;;;;18776:5;18790:1;18786;18782;:5;:9;18776:16;;;;;;;;;;;;;;;;;:29;;;;;18838:2;18841:1;18838:5;;;;;;;;;;;;;;;;;;:7;;;18846:1;18838:10;;;;;;;;;;;;;18819:5;18833:1;18829;18825;:5;:9;18819:16;;;;;;;;;;;;;;;;;:29;;;;;18583:3;;;;;;;18552:307;;;;18868:18;;:::i;:::-;18896:12;19024:4;19019:3;19012:4;19001:9;18997:20;18990:4;18983:5;18979:16;18976:1;18973;18966:4;18961:3;18957:14;18952:77;18941:88;;19106:7;19119:1;19114:20;;;;19099:35;;19114:20;19123:9;19099:35;;19161:7;19153:16;;;;;;;;19196:1;19186:3;19190:1;19186:6;;;;;;;;;;;;;:11;;19179:18;;;;;;;18291:913;;;;:::o;40282:1020:1:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:1;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;290:1762:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;290:1762:2;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;290:1762:2;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;290:1762:2;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;290:1762:2;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\nimport \"./ERC721Mintable.sol\";\nimport \"./verifier.sol\";\n\n// define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n// define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is Verifier, MyERC721Token {\n    // define a solutions struct that can hold an index & an address\n    struct Solution {\n        bytes32 index;\n        uint256 tokenId;\n        address addr;\n    }\n\n    // define an array of the above struct\n    mapping(uint256 => Solution) solutions;\n\n    // define a mapping to store unique solutions submitted\n    mapping(bytes32 => bool) submittedSolutions;\n\n    // Create an event to emit when a solution is added\n    event SolutionAdded(bytes32 key, address addr, uint256 tokenId);\n\n    // Create a function to add the solutions to the array and emit the event\n    function addSolution(\n        address addr,\n        uint256 tokenId,\n        uint[2] memory a, \n        uint[2][2] memory b, \n        uint[2] memory c, \n        uint[2] memory input\n    ) public {\n        bytes32 key = keccak256(\n            abi.encodePacked(a, b, c, input)\n        );\n        require(!submittedSolutions[key], \"The solution has been used before\");\n        bool isValid = verifyTx(a, b, c, input);\n        require(isValid, \"The proof is not valid\");\n        Solution memory solution = Solution(key, tokenId, addr);\n        solutions[tokenId] = solution;\n        submittedSolutions[key] = true;\n        emit SolutionAdded(key, addr, tokenId);\n    }\n\n    // Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n    function mint(address addr, uint256 tokenId) public returns (bool) {\n        require(\n            solutions[tokenId].addr != address(0),\n            \"The solution has been used before\"\n        );\n        return super.mint(addr, tokenId);\n    }\n}\n",
  "sourcePath": "/Users/mo/code/class/udacity-blockchain/Homework/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/Users/mo/code/class/udacity-blockchain/Homework/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7544
      ]
    },
    "id": 7545,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7400,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "absolutePath": "/Users/mo/code/class/udacity-blockchain/Homework/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7401,
        "nodeType": "ImportDirective",
        "scope": 7545,
        "sourceUnit": 1131,
        "src": "34:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/mo/code/class/udacity-blockchain/Homework/Blockchain-Capstone/eth-contracts/contracts/verifier.sol",
        "file": "./verifier.sol",
        "id": 7402,
        "nodeType": "ImportDirective",
        "scope": 7545,
        "sourceUnit": 10104,
        "src": "65:24:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7403,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10103,
              "src": "321:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10103",
                "typeString": "contract Verifier"
              }
            },
            "id": 7404,
            "nodeType": "InheritanceSpecifier",
            "src": "321:8:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7405,
              "name": "MyERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1130,
              "src": "331:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MyERC721Token_$1130",
                "typeString": "contract MyERC721Token"
              }
            },
            "id": 7406,
            "nodeType": "InheritanceSpecifier",
            "src": "331:13:2"
          }
        ],
        "contractDependencies": [
          91,
          991,
          211,
          165,
          693,
          1130,
          1101,
          7398,
          10103
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7544,
        "linearizedBaseContracts": [
          7544,
          1130,
          1101,
          7398,
          991,
          693,
          211,
          165,
          91,
          10103
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7413,
            "members": [
              {
                "constant": false,
                "id": 7408,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7413,
                "src": "446:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 7407,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "446:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7410,
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "scope": 7413,
                "src": "469:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7409,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "469:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7412,
                "name": "addr",
                "nodeType": "VariableDeclaration",
                "scope": 7413,
                "src": "494:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7411,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "494:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7544,
            "src": "420:93:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7417,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7544,
            "src": "562:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7413_storage_$",
              "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7416,
              "keyType": {
                "id": 7414,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "570:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "562:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7413_storage_$",
                "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7415,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7413,
                "src": "581:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7413_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7421,
            "name": "submittedSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7544,
            "src": "667:43:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 7420,
              "keyType": {
                "id": 7418,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "675:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "667:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 7419,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "686:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7429,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7423,
                  "indexed": false,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7429,
                  "src": "793:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7422,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7425,
                  "indexed": false,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7429,
                  "src": "806:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7424,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7427,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7429,
                  "src": "820:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "792:44:2"
            },
            "src": "773:64:2"
          },
          {
            "body": {
              "id": 7514,
              "nodeType": "Block",
              "src": "1116:469:2",
              "statements": [
                {
                  "assignments": [
                    7455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7455,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7514,
                      "src": "1126:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7454,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1126:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7465,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7459,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7437,
                            "src": "1180:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7460,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7443,
                            "src": "1183:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7461,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7447,
                            "src": "1186:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7462,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7451,
                            "src": "1189:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7457,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10317,
                            "src": "1163:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1163:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1163:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7456,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10324,
                      "src": "1140:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1140:65:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1126:79:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1223:24:2",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7467,
                            "name": "submittedSolutions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7421,
                            "src": "1224:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 7469,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7468,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7455,
                            "src": "1243:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1224:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520736f6c7574696f6e20686173206265656e2075736564206265666f7265",
                        "id": 7471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1249:35:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25446c56465601c3c5863a8ee954314e6d93224074011397d089d398c6540222",
                          "typeString": "literal_string \"The solution has been used before\""
                        },
                        "value": "The solution has been used before"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25446c56465601c3c5863a8ee954314e6d93224074011397d089d398c6540222",
                          "typeString": "literal_string \"The solution has been used before\""
                        }
                      ],
                      "id": 7466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10333,
                        10334
                      ],
                      "referencedDeclaration": 10334,
                      "src": "1215:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1215:70:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7473,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:70:2"
                },
                {
                  "assignments": [
                    7475
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7475,
                      "name": "isValid",
                      "nodeType": "VariableDeclaration",
                      "scope": 7514,
                      "src": "1295:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7474,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1295:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7482,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7477,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7437,
                        "src": "1319:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7478,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7443,
                        "src": "1322:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7479,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7447,
                        "src": "1325:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7480,
                        "name": "input",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7451,
                        "src": "1328:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                          "typeString": "uint256[2] memory[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 7476,
                      "name": "verifyTx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10102,
                      "src": "1310:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)"
                      }
                    },
                    "id": 7481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1310:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1295:39:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7484,
                        "name": "isValid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7475,
                        "src": "1352:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5468652070726f6f66206973206e6f742076616c6964",
                        "id": 7485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1361:24:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12c2183d5283ab5a33e069104318c0f5dfa180649ae7c355e46fda36590b49f1",
                          "typeString": "literal_string \"The proof is not valid\""
                        },
                        "value": "The proof is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12c2183d5283ab5a33e069104318c0f5dfa180649ae7c355e46fda36590b49f1",
                          "typeString": "literal_string \"The proof is not valid\""
                        }
                      ],
                      "id": 7483,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10333,
                        10334
                      ],
                      "referencedDeclaration": 10334,
                      "src": "1344:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1344:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7487,
                  "nodeType": "ExpressionStatement",
                  "src": "1344:42:2"
                },
                {
                  "assignments": [
                    7489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7489,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7514,
                      "src": "1396:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7413_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7488,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7413,
                        "src": "1396:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7413_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7495,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7491,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7455,
                        "src": "1432:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7492,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7433,
                        "src": "1437:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7493,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7431,
                        "src": "1446:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7490,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7413,
                      "src": "1423:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7413_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1423:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7413_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1396:55:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7496,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7417,
                        "src": "1461:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7413_storage_$",
                          "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7498,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7497,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7433,
                        "src": "1471:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1461:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7413_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7499,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7489,
                      "src": "1482:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7413_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1461:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7413_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7501,
                  "nodeType": "ExpressionStatement",
                  "src": "1461:29:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7502,
                        "name": "submittedSolutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7421,
                        "src": "1500:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 7504,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7503,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7455,
                        "src": "1519:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1500:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1526:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1500:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7507,
                  "nodeType": "ExpressionStatement",
                  "src": "1500:30:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7509,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7455,
                        "src": "1559:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7510,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7431,
                        "src": "1564:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7511,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7433,
                        "src": "1570:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7508,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7429,
                      "src": "1545:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,uint256)"
                      }
                    },
                    "id": 7512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1545:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7513,
                  "nodeType": "EmitStatement",
                  "src": "1540:38:2"
                }
              ]
            },
            "documentation": null,
            "id": 7515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7431,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7515,
                  "src": "951:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "951:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7433,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7515,
                  "src": "973:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7437,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7515,
                  "src": "998:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7434,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "998:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7436,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1003:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "998:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7443,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7515,
                  "src": "1025:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7438,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1025:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7440,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1030:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1025:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7442,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1033:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1025:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7447,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7515,
                  "src": "1055:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7444,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1055:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7446,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1060:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1055:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7451,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7515,
                  "src": "1082:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7448,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1082:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7450,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1087:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1082:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "941:167:2"
            },
            "returnParameters": {
              "id": 7453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1116:0:2"
            },
            "scope": 7544,
            "src": "921:664:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7542,
              "nodeType": "Block",
              "src": "1874:176:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7525,
                              "name": "solutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7417,
                              "src": "1905:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Solution_$7413_storage_$",
                                "typeString": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7527,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7526,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7519,
                              "src": "1915:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1905:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7413_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7528,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7412,
                          "src": "1905:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1940:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1932:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1932:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1905:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520736f6c7574696f6e20686173206265656e2075736564206265666f7265",
                        "id": 7533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1956:35:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25446c56465601c3c5863a8ee954314e6d93224074011397d089d398c6540222",
                          "typeString": "literal_string \"The solution has been used before\""
                        },
                        "value": "The solution has been used before"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25446c56465601c3c5863a8ee954314e6d93224074011397d089d398c6540222",
                          "typeString": "literal_string \"The solution has been used before\""
                        }
                      ],
                      "id": 7524,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10333,
                        10334
                      ],
                      "referencedDeclaration": 10334,
                      "src": "1884:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1884:117:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7535,
                  "nodeType": "ExpressionStatement",
                  "src": "1884:117:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7538,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7517,
                        "src": "2029:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7539,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7519,
                        "src": "2035:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7536,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10384,
                        "src": "2018:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7544",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1129,
                      "src": "2018:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2018:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7523,
                  "id": 7541,
                  "nodeType": "Return",
                  "src": "2011:32:2"
                }
              ]
            },
            "documentation": null,
            "id": 7543,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7517,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7543,
                  "src": "1821:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1821:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7519,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7543,
                  "src": "1835:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7518,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1835:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1820:31:2"
            },
            "returnParameters": {
              "id": 7523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7522,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7543,
                  "src": "1868:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7521,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1868:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1867:6:2"
            },
            "scope": 7544,
            "src": "1807:243:2",
            "stateMutability": "nonpayable",
            "superFunction": 1129,
            "visibility": "public"
          }
        ],
        "scope": 7545,
        "src": "290:1762:2"
      }
    ],
    "src": "0:2053:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/mo/code/class/udacity-blockchain/Homework/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7544
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7400,
        "name": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "attributes": {
          "SourceUnit": 1131,
          "absolutePath": "/Users/mo/code/class/udacity-blockchain/Homework/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7545,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7401,
        "name": "ImportDirective",
        "src": "34:30:2"
      },
      {
        "attributes": {
          "SourceUnit": 10104,
          "absolutePath": "/Users/mo/code/class/udacity-blockchain/Homework/Blockchain-Capstone/eth-contracts/contracts/verifier.sol",
          "file": "./verifier.sol",
          "scope": 7545,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7402,
        "name": "ImportDirective",
        "src": "65:24:2"
      },
      {
        "attributes": {
          "contractDependencies": [
            91,
            991,
            211,
            165,
            693,
            1130,
            1101,
            7398,
            10103
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7544,
            1130,
            1101,
            7398,
            991,
            693,
            211,
            165,
            91,
            10103
          ],
          "name": "SolnSquareVerifier",
          "scope": 7545
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 10103,
                  "type": "contract Verifier"
                },
                "id": 7403,
                "name": "UserDefinedTypeName",
                "src": "321:8:2"
              }
            ],
            "id": 7404,
            "name": "InheritanceSpecifier",
            "src": "321:8:2"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "MyERC721Token",
                  "referencedDeclaration": 1130,
                  "type": "contract MyERC721Token"
                },
                "id": 7405,
                "name": "UserDefinedTypeName",
                "src": "331:13:2"
              }
            ],
            "id": 7406,
            "name": "InheritanceSpecifier",
            "src": "331:13:2"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7544,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7413,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes32",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7407,
                    "name": "ElementaryTypeName",
                    "src": "446:7:2"
                  }
                ],
                "id": 7408,
                "name": "VariableDeclaration",
                "src": "446:13:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "tokenId",
                  "scope": 7413,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7409,
                    "name": "ElementaryTypeName",
                    "src": "469:7:2"
                  }
                ],
                "id": 7410,
                "name": "VariableDeclaration",
                "src": "469:15:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "addr",
                  "scope": 7413,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7411,
                    "name": "ElementaryTypeName",
                    "src": "494:7:2"
                  }
                ],
                "id": 7412,
                "name": "VariableDeclaration",
                "src": "494:12:2"
              }
            ],
            "id": 7413,
            "name": "StructDefinition",
            "src": "420:93:2"
          },
          {
            "attributes": {
              "constant": false,
              "name": "solutions",
              "scope": 7544,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7414,
                    "name": "ElementaryTypeName",
                    "src": "570:7:2"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7413,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7415,
                    "name": "UserDefinedTypeName",
                    "src": "581:8:2"
                  }
                ],
                "id": 7416,
                "name": "Mapping",
                "src": "562:28:2"
              }
            ],
            "id": 7417,
            "name": "VariableDeclaration",
            "src": "562:38:2"
          },
          {
            "attributes": {
              "constant": false,
              "name": "submittedSolutions",
              "scope": 7544,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => bool)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7418,
                    "name": "ElementaryTypeName",
                    "src": "675:7:2"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7419,
                    "name": "ElementaryTypeName",
                    "src": "686:4:2"
                  }
                ],
                "id": 7420,
                "name": "Mapping",
                "src": "667:24:2"
              }
            ],
            "id": 7421,
            "name": "VariableDeclaration",
            "src": "667:43:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "key",
                      "scope": 7429,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7422,
                        "name": "ElementaryTypeName",
                        "src": "793:7:2"
                      }
                    ],
                    "id": 7423,
                    "name": "VariableDeclaration",
                    "src": "793:11:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "addr",
                      "scope": 7429,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7424,
                        "name": "ElementaryTypeName",
                        "src": "806:7:2"
                      }
                    ],
                    "id": 7425,
                    "name": "VariableDeclaration",
                    "src": "806:12:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "tokenId",
                      "scope": 7429,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7426,
                        "name": "ElementaryTypeName",
                        "src": "820:7:2"
                      }
                    ],
                    "id": 7427,
                    "name": "VariableDeclaration",
                    "src": "820:15:2"
                  }
                ],
                "id": 7428,
                "name": "ParameterList",
                "src": "792:44:2"
              }
            ],
            "id": 7429,
            "name": "EventDefinition",
            "src": "773:64:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7544,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "addr",
                      "scope": 7515,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7430,
                        "name": "ElementaryTypeName",
                        "src": "951:7:2"
                      }
                    ],
                    "id": 7431,
                    "name": "VariableDeclaration",
                    "src": "951:12:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7515,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7432,
                        "name": "ElementaryTypeName",
                        "src": "973:7:2"
                      }
                    ],
                    "id": 7433,
                    "name": "VariableDeclaration",
                    "src": "973:15:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "a",
                      "scope": 7515,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7434,
                            "name": "ElementaryTypeName",
                            "src": "998:4:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": null,
                              "value": "2"
                            },
                            "id": 7435,
                            "name": "Literal",
                            "src": "1003:1:2"
                          }
                        ],
                        "id": 7436,
                        "name": "ArrayTypeName",
                        "src": "998:7:2"
                      }
                    ],
                    "id": 7437,
                    "name": "VariableDeclaration",
                    "src": "998:16:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "b",
                      "scope": 7515,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2][2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2][2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[2]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 7438,
                                "name": "ElementaryTypeName",
                                "src": "1025:4:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": null,
                                  "value": "2"
                                },
                                "id": 7439,
                                "name": "Literal",
                                "src": "1030:1:2"
                              }
                            ],
                            "id": 7440,
                            "name": "ArrayTypeName",
                            "src": "1025:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": null,
                              "value": "2"
                            },
                            "id": 7441,
                            "name": "Literal",
                            "src": "1033:1:2"
                          }
                        ],
                        "id": 7442,
                        "name": "ArrayTypeName",
                        "src": "1025:10:2"
                      }
                    ],
                    "id": 7443,
                    "name": "VariableDeclaration",
                    "src": "1025:19:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "c",
                      "scope": 7515,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7444,
                            "name": "ElementaryTypeName",
                            "src": "1055:4:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": null,
                              "value": "2"
                            },
                            "id": 7445,
                            "name": "Literal",
                            "src": "1060:1:2"
                          }
                        ],
                        "id": 7446,
                        "name": "ArrayTypeName",
                        "src": "1055:7:2"
                      }
                    ],
                    "id": 7447,
                    "name": "VariableDeclaration",
                    "src": "1055:16:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7515,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 7448,
                            "name": "ElementaryTypeName",
                            "src": "1082:4:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": null,
                              "value": "2"
                            },
                            "id": 7449,
                            "name": "Literal",
                            "src": "1087:1:2"
                          }
                        ],
                        "id": 7450,
                        "name": "ArrayTypeName",
                        "src": "1082:7:2"
                      }
                    ],
                    "id": 7451,
                    "name": "VariableDeclaration",
                    "src": "1082:20:2"
                  }
                ],
                "id": 7452,
                "name": "ParameterList",
                "src": "941:167:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7453,
                "name": "ParameterList",
                "src": "1116:0:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7455
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "key",
                          "scope": 7514,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7454,
                            "name": "ElementaryTypeName",
                            "src": "1126:7:2"
                          }
                        ],
                        "id": 7455,
                        "name": "VariableDeclaration",
                        "src": "1126:11:2"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10324,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7456,
                            "name": "Identifier",
                            "src": "1140:9:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                      "typeString": "uint256[2] memory[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10317,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7457,
                                    "name": "Identifier",
                                    "src": "1163:3:2"
                                  }
                                ],
                                "id": 7458,
                                "name": "MemberAccess",
                                "src": "1163:16:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7437,
                                  "type": "uint256[2] memory",
                                  "value": "a"
                                },
                                "id": 7459,
                                "name": "Identifier",
                                "src": "1180:1:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7443,
                                  "type": "uint256[2] memory[2] memory",
                                  "value": "b"
                                },
                                "id": 7460,
                                "name": "Identifier",
                                "src": "1183:1:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7447,
                                  "type": "uint256[2] memory",
                                  "value": "c"
                                },
                                "id": 7461,
                                "name": "Identifier",
                                "src": "1186:1:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7451,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7462,
                                "name": "Identifier",
                                "src": "1189:5:2"
                              }
                            ],
                            "id": 7463,
                            "name": "FunctionCall",
                            "src": "1163:32:2"
                          }
                        ],
                        "id": 7464,
                        "name": "FunctionCall",
                        "src": "1140:65:2"
                      }
                    ],
                    "id": 7465,
                    "name": "VariableDeclarationStatement",
                    "src": "1126:79:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_25446c56465601c3c5863a8ee954314e6d93224074011397d089d398c6540222",
                                  "typeString": "literal_string \"The solution has been used before\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10333,
                                10334
                              ],
                              "referencedDeclaration": 10334,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7466,
                            "name": "Identifier",
                            "src": "1215:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7421,
                                      "type": "mapping(bytes32 => bool)",
                                      "value": "submittedSolutions"
                                    },
                                    "id": 7467,
                                    "name": "Identifier",
                                    "src": "1224:18:2"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7455,
                                      "type": "bytes32",
                                      "value": "key"
                                    },
                                    "id": 7468,
                                    "name": "Identifier",
                                    "src": "1243:3:2"
                                  }
                                ],
                                "id": 7469,
                                "name": "IndexAccess",
                                "src": "1224:23:2"
                              }
                            ],
                            "id": 7470,
                            "name": "UnaryOperation",
                            "src": "1223:24:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "54686520736f6c7574696f6e20686173206265656e2075736564206265666f7265",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"The solution has been used before\"",
                              "value": "The solution has been used before"
                            },
                            "id": 7471,
                            "name": "Literal",
                            "src": "1249:35:2"
                          }
                        ],
                        "id": 7472,
                        "name": "FunctionCall",
                        "src": "1215:70:2"
                      }
                    ],
                    "id": 7473,
                    "name": "ExpressionStatement",
                    "src": "1215:70:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7475
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "isValid",
                          "scope": 7514,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 7474,
                            "name": "ElementaryTypeName",
                            "src": "1295:4:2"
                          }
                        ],
                        "id": 7475,
                        "name": "VariableDeclaration",
                        "src": "1295:12:2"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                  "typeString": "uint256[2] memory[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10102,
                              "type": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) returns (bool)",
                              "value": "verifyTx"
                            },
                            "id": 7476,
                            "name": "Identifier",
                            "src": "1310:8:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7437,
                              "type": "uint256[2] memory",
                              "value": "a"
                            },
                            "id": 7477,
                            "name": "Identifier",
                            "src": "1319:1:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7443,
                              "type": "uint256[2] memory[2] memory",
                              "value": "b"
                            },
                            "id": 7478,
                            "name": "Identifier",
                            "src": "1322:1:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7447,
                              "type": "uint256[2] memory",
                              "value": "c"
                            },
                            "id": 7479,
                            "name": "Identifier",
                            "src": "1325:1:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7451,
                              "type": "uint256[2] memory",
                              "value": "input"
                            },
                            "id": 7480,
                            "name": "Identifier",
                            "src": "1328:5:2"
                          }
                        ],
                        "id": 7481,
                        "name": "FunctionCall",
                        "src": "1310:24:2"
                      }
                    ],
                    "id": 7482,
                    "name": "VariableDeclarationStatement",
                    "src": "1295:39:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_12c2183d5283ab5a33e069104318c0f5dfa180649ae7c355e46fda36590b49f1",
                                  "typeString": "literal_string \"The proof is not valid\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10333,
                                10334
                              ],
                              "referencedDeclaration": 10334,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7483,
                            "name": "Identifier",
                            "src": "1344:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7475,
                              "type": "bool",
                              "value": "isValid"
                            },
                            "id": 7484,
                            "name": "Identifier",
                            "src": "1352:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5468652070726f6f66206973206e6f742076616c6964",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"The proof is not valid\"",
                              "value": "The proof is not valid"
                            },
                            "id": 7485,
                            "name": "Literal",
                            "src": "1361:24:2"
                          }
                        ],
                        "id": 7486,
                        "name": "FunctionCall",
                        "src": "1344:42:2"
                      }
                    ],
                    "id": 7487,
                    "name": "ExpressionStatement",
                    "src": "1344:42:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7489
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "solution",
                          "scope": 7514,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7413,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7488,
                            "name": "UserDefinedTypeName",
                            "src": "1396:8:2"
                          }
                        ],
                        "id": 7489,
                        "name": "VariableDeclaration",
                        "src": "1396:24:2"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "struct SolnSquareVerifier.Solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7413,
                              "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                              "value": "Solution"
                            },
                            "id": 7490,
                            "name": "Identifier",
                            "src": "1423:8:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7455,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 7491,
                            "name": "Identifier",
                            "src": "1432:3:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7433,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7492,
                            "name": "Identifier",
                            "src": "1437:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7431,
                              "type": "address",
                              "value": "addr"
                            },
                            "id": 7493,
                            "name": "Identifier",
                            "src": "1446:4:2"
                          }
                        ],
                        "id": 7494,
                        "name": "FunctionCall",
                        "src": "1423:28:2"
                      }
                    ],
                    "id": 7495,
                    "name": "VariableDeclarationStatement",
                    "src": "1396:55:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7417,
                                  "type": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "solutions"
                                },
                                "id": 7496,
                                "name": "Identifier",
                                "src": "1461:9:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7433,
                                  "type": "uint256",
                                  "value": "tokenId"
                                },
                                "id": 7497,
                                "name": "Identifier",
                                "src": "1471:7:2"
                              }
                            ],
                            "id": 7498,
                            "name": "IndexAccess",
                            "src": "1461:18:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7489,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "solution"
                            },
                            "id": 7499,
                            "name": "Identifier",
                            "src": "1482:8:2"
                          }
                        ],
                        "id": 7500,
                        "name": "Assignment",
                        "src": "1461:29:2"
                      }
                    ],
                    "id": 7501,
                    "name": "ExpressionStatement",
                    "src": "1461:29:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7421,
                                  "type": "mapping(bytes32 => bool)",
                                  "value": "submittedSolutions"
                                },
                                "id": 7502,
                                "name": "Identifier",
                                "src": "1500:18:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7455,
                                  "type": "bytes32",
                                  "value": "key"
                                },
                                "id": 7503,
                                "name": "Identifier",
                                "src": "1519:3:2"
                              }
                            ],
                            "id": 7504,
                            "name": "IndexAccess",
                            "src": "1500:23:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7505,
                            "name": "Literal",
                            "src": "1526:4:2"
                          }
                        ],
                        "id": 7506,
                        "name": "Assignment",
                        "src": "1500:30:2"
                      }
                    ],
                    "id": 7507,
                    "name": "ExpressionStatement",
                    "src": "1500:30:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7429,
                              "type": "function (bytes32,address,uint256)",
                              "value": "SolutionAdded"
                            },
                            "id": 7508,
                            "name": "Identifier",
                            "src": "1545:13:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7455,
                              "type": "bytes32",
                              "value": "key"
                            },
                            "id": 7509,
                            "name": "Identifier",
                            "src": "1559:3:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7431,
                              "type": "address",
                              "value": "addr"
                            },
                            "id": 7510,
                            "name": "Identifier",
                            "src": "1564:4:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7433,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7511,
                            "name": "Identifier",
                            "src": "1570:7:2"
                          }
                        ],
                        "id": 7512,
                        "name": "FunctionCall",
                        "src": "1545:33:2"
                      }
                    ],
                    "id": 7513,
                    "name": "EmitStatement",
                    "src": "1540:38:2"
                  }
                ],
                "id": 7514,
                "name": "Block",
                "src": "1116:469:2"
              }
            ],
            "id": 7515,
            "name": "FunctionDefinition",
            "src": "921:664:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 7544,
              "stateMutability": "nonpayable",
              "superFunction": 1129,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "addr",
                      "scope": 7543,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7516,
                        "name": "ElementaryTypeName",
                        "src": "1821:7:2"
                      }
                    ],
                    "id": 7517,
                    "name": "VariableDeclaration",
                    "src": "1821:12:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7543,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7518,
                        "name": "ElementaryTypeName",
                        "src": "1835:7:2"
                      }
                    ],
                    "id": 7519,
                    "name": "VariableDeclaration",
                    "src": "1835:15:2"
                  }
                ],
                "id": 7520,
                "name": "ParameterList",
                "src": "1820:31:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 7543,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7521,
                        "name": "ElementaryTypeName",
                        "src": "1868:4:2"
                      }
                    ],
                    "id": 7522,
                    "name": "VariableDeclaration",
                    "src": "1868:4:2"
                  }
                ],
                "id": 7523,
                "name": "ParameterList",
                "src": "1867:6:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_25446c56465601c3c5863a8ee954314e6d93224074011397d089d398c6540222",
                                  "typeString": "literal_string \"The solution has been used before\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10333,
                                10334
                              ],
                              "referencedDeclaration": 10334,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7524,
                            "name": "Identifier",
                            "src": "1884:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "addr",
                                  "referencedDeclaration": 7412,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7417,
                                          "type": "mapping(uint256 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "solutions"
                                        },
                                        "id": 7525,
                                        "name": "Identifier",
                                        "src": "1905:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7519,
                                          "type": "uint256",
                                          "value": "tokenId"
                                        },
                                        "id": 7526,
                                        "name": "Identifier",
                                        "src": "1915:7:2"
                                      }
                                    ],
                                    "id": 7527,
                                    "name": "IndexAccess",
                                    "src": "1905:18:2"
                                  }
                                ],
                                "id": 7528,
                                "name": "MemberAccess",
                                "src": "1905:23:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 7529,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1932:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 7530,
                                    "name": "Literal",
                                    "src": "1940:1:2"
                                  }
                                ],
                                "id": 7531,
                                "name": "FunctionCall",
                                "src": "1932:10:2"
                              }
                            ],
                            "id": 7532,
                            "name": "BinaryOperation",
                            "src": "1905:37:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "54686520736f6c7574696f6e20686173206265656e2075736564206265666f7265",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"The solution has been used before\"",
                              "value": "The solution has been used before"
                            },
                            "id": 7533,
                            "name": "Literal",
                            "src": "1956:35:2"
                          }
                        ],
                        "id": 7534,
                        "name": "FunctionCall",
                        "src": "1884:117:2"
                      }
                    ],
                    "id": 7535,
                    "name": "ExpressionStatement",
                    "src": "1884:117:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 7523
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mint",
                              "referencedDeclaration": 1129,
                              "type": "function (address,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10384,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 7536,
                                "name": "Identifier",
                                "src": "2018:5:2"
                              }
                            ],
                            "id": 7537,
                            "name": "MemberAccess",
                            "src": "2018:10:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7517,
                              "type": "address",
                              "value": "addr"
                            },
                            "id": 7538,
                            "name": "Identifier",
                            "src": "2029:4:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7519,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7539,
                            "name": "Identifier",
                            "src": "2035:7:2"
                          }
                        ],
                        "id": 7540,
                        "name": "FunctionCall",
                        "src": "2018:25:2"
                      }
                    ],
                    "id": 7541,
                    "name": "Return",
                    "src": "2011:32:2"
                  }
                ],
                "id": 7542,
                "name": "Block",
                "src": "1874:176:2"
              }
            ],
            "id": 7543,
            "name": "FunctionDefinition",
            "src": "1807:243:2"
          }
        ],
        "id": 7544,
        "name": "ContractDefinition",
        "src": "290:1762:2"
      }
    ],
    "id": 7545,
    "name": "SourceUnit",
    "src": "0:2053:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x9afD2040600375B9Dd8752F8b4F48Ff48A19986d",
      "transactionHash": "0x47df158ffde20543aff0c23b03594ab90fc15acacb1f8091141c87e9706de5b1"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2022-09-15T15:02:46.911Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}